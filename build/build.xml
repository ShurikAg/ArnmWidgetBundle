<?xml version="1.0" encoding="UTF-8"?>

<project name="ArnmWidgetBundle" default="build" basedir="..">
	<target name="build"
		depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpunit,phpcb" />

	<target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb" />

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend" />
				<antcall target="phpmd-ci" />
			</sequential>
			<antcall target="phpcpd" />
			<antcall target="phpcs-ci" />
			<antcall target="phploc" />
			<antcall target="phpdoc" />
		</parallel>
	</target>
	
	<property name="artifacts" value="${basedir}/build/artifacts"/>

	<property name="source" value="${basedir}" />

	<property name="api-dir" value="${artifacts}/api" />
	<property name="code-browser-dir" value="${artifacts}/code-browser" />
	<property name="coverage-dir" value="${artifacts}/coverage" />
	<property name="logs-dir" value="${artifacts}/logs" />
	<property name="pdepend-dir" value="${artifacts}/pdepend" />

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${api-dir}" />
		<delete dir="${code-browser-dir}" />
		<delete dir="${coverage-dir}" />
		<delete dir="${logs-dir}" />
		<delete dir="${pdepend-dir}" />
	</target>

	<target name="prepare" depends="clean, deps" description="Prepare for build">
		<mkdir dir="${api-dir}" />
		<mkdir dir="${code-browser-dir}" />
		<mkdir dir="${coverage-dir}" />
		<mkdir dir="${logs-dir}" />
		<mkdir dir="${pdepend-dir}" />
	</target>

	<target name="deps" description="Install dependencies">
		<!--
		<exec executable="bash" failonerror="true">
			<arg value="-c" />
			<arg value="curl -s http://getcomposer.org/installer | php" />
		</exec>
		-->
		<exec executable="composer.phar" failonerror="true">
			<arg value="update" />
		</exec>
	</target>

	<target name="lint">
		<apply executable="php" failonerror="true">
			<arg value="-l" />

			<fileset dir="${source}">
				<include name="**/*.php" />
				<exclude name="**/vendor/**/*.php" />
				<modified />
			</fileset>
		</apply>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc" failonerror="true">
			<arg value="--log-csv" />
			<arg value="${logs-dir}/phploc.csv" />
			<arg value="--exclude" />
			<arg value="vendor,Tests" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend" failonerror="true">
			<arg value="--jdepend-xml=${logs-dir}/jdepend.xml" />
			<arg value="--jdepend-chart=${pdepend-dir}/dependencies.svg" />
			<arg value="--overview-pyramid=${pdepend-dir}/overview-pyramid.svg" />
			<arg value="--ignore=vendor,Tests" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD">
		<exec executable="phpmd">
			<arg path="${source}" />
			<arg value="xml" />
			<arg value="${basedir}/build/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${logs-dir}/pmd.xml" />
			<arg value="--exclude" />
			<arg value="vendor,Tests,Resources" />
		</exec>
	</target>

	<target name="phpcs-ci"
		description="Find coding standard violations using PHP_CodeSniffer">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--standard=Symfony2" />
			<arg value="--report-file=${logs-dir}/checkstyle.xml" />
			<arg value="--ignore=vendor,Tests,Resources" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--log-pmd" />
			<arg value="${logs-dir}/pmd-cpd.xml" />
			<arg value="--exclude" />
			<arg value="vendor,Tests" />
			<arg path="${source}" />
		</exec>
	</target>

	<target name="phpdoc" description="Generate API documentation using PHPDocumentor">
		<exec executable="phpdoc">
			<arg value="--quiet" />
			<arg value="--directory" />
			<arg path="${source}" />
			<arg value="--target" />
			<arg path="${api-dir}" />
			<arg value="--ignore" />
			<arg value="*/vendor/*, */Tests/*" />
		</exec>
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="phpunit" failonerror="true">
			<arg value="--debug" />
			<arg value="-c" />
			<arg path="${basedir}" />
			<arg value="--coverage-clover" />
			<arg path="${logs-dir}/clover.xml" />
			<arg value="--coverage-html" />
			<arg path="${coverage-dir}" />
			<arg value="--log-junit" />
			<arg path="${logs-dir}/junit.xml" />
		</exec>
	</target>

	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg value="--log" />
			<arg path="${logs-dir}" />
			<arg value="--source" />
			<arg path="${source}" />
			<arg value="--ignore" />
			<arg value="vendor,Tests,build" />
			<arg value="--output" />
			<arg path="${code-browser-dir}" />
		</exec>
	</target>
</project>